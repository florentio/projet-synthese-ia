# dvc.yaml
# 
# DVC pipeline configuration for data versioning and reproducible ML workflows
# Defines stages: data preparation, training, evaluation, and deployment
# Each stage tracks inputs, outputs, parameters, and metrics

stages:
  
  # ==============================================
  # STAGE 1: DATA PREPARATION
  # ==============================================
  prepare_data:
    cmd: python scripts/data_preparation.py
    deps:
      - data/raw/telco_churn_raw.csv
      - scripts/data_preparation.py
    outs:
      - data/processed/telco_churn.csv
      - data/processed/data_validation_report.html
    params:
      - data_prep.drop_columns
      - data_prep.missing_value_strategy
      - data_prep.validation_rules
    metrics:
      - reports/data_quality_metrics.json

  # ==============================================
  # STAGE 2: FEATURE ENGINEERING
  # ==============================================
  #feature_engineering:
  #  cmd: python scripts/feature_engineering.py
  #  deps:
  #    - data/processed/telco_churn.csv
  #    - scripts/feature_engineering.py
  #  outs:
  #    - data/features/training_features.csv
  #    - data/features/feature_metadata.json
  #  params:
  #    - feature_eng.create_interaction_features
  #    - feature_eng.polynomial_features
  #    - feature_eng.feature_selection_threshold

  # ==============================================
  # STAGE 3: MODEL TRAINING
  # ==============================================
  train_model:
    cmd: python train.py
    deps:
      - data/processed/telco_churn.csv  # Use this instead of training_features.csv
      - params.yaml
      - train.py
    outs:
      - model/best_churn_model.joblib
      - model/model_metadata.json
      - model/evaluation_metrics.png
    params:
      - training.models_to_try
      - training.cv_folds
      - training.test_size
      - training.random_seed
    
  # ==============================================
  # STAGE 4: MODEL EVALUATION
  # ==============================================
  evaluate_model:
    cmd: python scripts/model_evaluation.py
    deps:
      - model/best_churn_model.joblib
      - data/processed/telco_churn.csv
      - scripts/model_evaluation.py
    outs:
      - reports/model_evaluation_report.html
      - reports/feature_importance.png
      - reports/shap_explanations.png
    metrics:
      - reports/evaluation_metrics.json

  # ==============================================
  # STAGE 5: DATA DRIFT MONITORING
  # ==============================================
  monitor_drift:
    cmd: python scripts/drift_monitoring.py
    deps:
      - data/features/training_features.csv
      - data/monitoring/current_data.csv
      - scripts/drift_monitoring.py
    outs:
      - reports/drift_report.html
      - reports/drift_metrics.json
    metrics:
      - reports/drift_scores.json
